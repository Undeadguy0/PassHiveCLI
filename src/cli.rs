use colored::*;
use std::{
    io::{Write, stdout},
    path::PathBuf,
};

const main_yellow: (u8, u8, u8) = (246, 196, 32);

pub fn hi() {
    println!("{}", "üêùüêùüêù –ü—Ä–∏–≤–µ—Ç—Å—Ç–≤—É—é –≤ PassHiveCLI! üêùüêùüêù".green());
}

pub fn check_success() {
    print!(
        "{}",
        "–ü–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –∫ —Ä–∞–±–æ—á–µ–π –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏–∏ ".truecolor(246, 196, 32)
    );
    print!("{}", "—É—Å–ø–µ—à–Ω–æ!".green().bold());
    stdout().flush().unwrap();
}

pub fn check_error(os: &String) {
    print!(
        "{}",
        "–ü–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –∫ —Ä–∞–±–æ—á–µ–π –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏–∏ ".truecolor(246, 196, 32)
    );
    print!("{}", "–Ω–µ —É–¥–∞–ª–æ—Å—å!\n".red().bold());
    stdout().flush().unwrap();

    println!(
        "{}",
        "–ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä—É—é —Ä–∞–±–æ—á—É—é –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏—é, –±–∑–∑üêù".truecolor(246, 196, 32)
    );
    println!("–í–∞—à–∞ –û–° - {}", os.italic());
}

pub fn success_init_dir(path: &PathBuf) {
    print!("{}", "–î–∏—Ä–µ–∫—Ç–æ—Ä–∏—è ".truecolor(246, 196, 32));
    print!("{} ", path.display());
    print!("{}", "—Å–æ–∑–¥–∞–Ω–∞ —É—Å–ø–µ—à–Ω–æ!".green().bold());
}

pub fn init_db() {
    println!("{}", "–ò–Ω–∏—Ü–∏–∞–ª–∏–∑—É—Ä—É—é –ë–î, –±–∑–∑".truecolor(246, 196, 32));
}

pub fn throw_err(msg: String) {
    println!("{}", msg.bold().red());
}
